do sprawdzenia:

1. test stworzenia nowego Pull Requesta
	jesli dobrze rozumiem, to PR moze istniec tylko jak ktos stworzy nowy branch i wysle jakis commit? 
	A moze ktos moze: a) zrobic lokalnie zmiany w master, b) git push origin master ?
	
- wchodzi na to, ze mozna z byle czego, ale topic branch jest lepsza opcja bo mozna "follow-ups" 
	https://help.github.com/articles/about-pull-requests/

2. czy PR moze byc otwarty jako dyskusja? jaki wtedy jest flow? powiedzialbym, ze PR z nowym branchem (jeszcze pustum), a pozniej praca w nim i finalnie merge?

- wychodzi na to, ze sa follow-ups

DONE 3. sprawdzic / nauczyc sie jak dziala stagging, commiting i pushing new branch z Eclipsa (bo z CLI wiadomo)

DONE 4. Ustalic jak poradzic sobie z sytuacja, ktorea stworzyl Pan W.Fracz, a mianowicie: mialem PR z nowymi commit'ami, a on dodal tam komentarze co zmienic, wiec musze zrobic follow-ups
Nie wiem jak to kontynuowac, zanim spradze, sprobuje przeczytac cos na necie + Chapter 6 z ksiazki 'pro git'

- ok znalezione w ebook'u "Pro git" 
"Now the contributor can see what they need to do in order to get their change accepted. Luckily this is very straightforward...
with GitHub you simply commit to the topic branch again and push, which will automatically update the Pull Request. 
In Pull Request final you can also see that the old code comment has been collapsed in the updated Pull Request, since it was made on a line that has since been changed.
Adding commits to an existing Pull Request doesnâ€™t trigger a notification, so ... leave a comment to inform the project owner that he made the requested change."

DONE 5. test stagging w Eclipse 
- wychodzi na to, ze 'add to index' robi za git add 